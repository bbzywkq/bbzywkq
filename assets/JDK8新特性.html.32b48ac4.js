import{_ as n,o as s,c as a,a as t}from"./app.234ff118.js";const p={},e=t(`<h1 id="jdk8\u65B0\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#jdk8\u65B0\u7279\u6027" aria-hidden="true">#</a> JDK8\u65B0\u7279\u6027</h1><p>[toc]</p><h1 id="_1-\u63A5\u53E3\u7684\u9ED8\u8BA4\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u63A5\u53E3\u7684\u9ED8\u8BA4\u65B9\u6CD5" aria-hidden="true">#</a> 1.\u63A5\u53E3\u7684\u9ED8\u8BA4\u65B9\u6CD5</h1><p>\u5728\u63A5\u53E3\u4E2D\u65B0\u589E\u4E86<strong>default</strong>\u65B9\u6CD5\u548C<strong>static</strong>\u65B9\u6CD5\uFF0C\u8FD9\u4E24\u79CD\u65B9\u6CD5\u53EF\u4EE5\u6709\u65B9\u6CD5\u4F53</p><h2 id="static\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#static\u65B9\u6CD5" aria-hidden="true">#</a> static\u65B9\u6CD5</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DefalutTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> a <span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DefalutTest defalut \u65B9\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">staticMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DefalutTest static \u65B9\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u53E3\u91CC\u7684\u9759\u6001\u65B9\u6CD5\uFF0C\u5373static\u4FEE\u9970\u7684\u6709\u65B9\u6CD5\u4F53\u7684\u65B9\u6CD5\u4E0D\u4F1A\u88AB\u7EE7\u627F\u6216\u8005\u5B9E\u73B0\uFF0C\u4F46\u662F\u9759\u6001\u53D8\u91CF\u4F1A\u88AB\u7EE7\u627F \u4F8B\u5982\uFF1A\u6211\u4EEC\u6DFB\u52A0\u4E00\u4E2A\u63A5\u53E3DefalutTest\u7684\u5B9E\u73B0\u7C7BDefaultTestImpl</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultTestImpl</span> <span class="token keyword">implements</span> <span class="token class-name">DefalutTest</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO Auto-generated method stub</span>
        <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0B\u56FE\u6240\u793A\u662F\u8FD9\u4E2A\u5B9E\u73B0\u7C7B\u4E2D\u6240\u6709\u53EF\u8C03\u7528\u7684\u65B9\u6CD5\uFF1A</p><p><img src="https://file.bbzy.online/blog/7l6qRqbBkyaG589apNx8zRdRNHPLnseNar7tXwZ1k7Y.png" alt="image"></p><p>\u5728\u8FD9\u4E9B\u65B9\u6CD5\u91CC\u9762\u6211\u4EEC\u65E0\u6CD5\u627E\u5230staticMethod\u65B9\u6CD5\uFF0C\u5219\u8BF4\u660E\u63A5\u53E3\u4E2D\u7684static\u65B9\u6CD5\u4E0D\u80FD\u88AB\u5B83\u7684\u5B9E\u73B0\u7C7B\u76F4\u63A5\u4F7F\u7528\u3002\u4F46\u662F\u6211\u4EEC\u770B\u5230\u4E86defaultMethod\uFF0C\u8BF4\u660E\u5B9E\u73B0\u7C7B\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\u63A5\u53E3\u4E2D\u7684default\u65B9\u6CD5\uFF1B \u90A3\u4E48\u5982\u4F55\u4F7F\u7528\u63A5\u53E3\u4E2D\u7684static\u65B9\u6CD5\u5462\uFF1F\uFF1F\uFF1F</p><p>\u63A5\u53E3.static\u65B9\u6CD5\u8C03\u7528\uFF0C\u5982\uFF1ADefalutTest.staticMethod();</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DefaultTestImpl</span> dtl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTestImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DefalutTest</span><span class="token punctuation">.</span><span class="token function">staticMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u8BD5\u56FE\u4F7F\u7528\u63A5\u53E3\u7684\u5B50\u63A5\u53E3\u53BB\u8C03\u7528\u7236\u63A5\u53E3\u7684static\u65B9\u6CD5\u662F\uFF0C\u6211\u4EEC\u53D1\u73B0\uFF0C\u65E0\u6CD5\u8C03\u7528\uFF0C\u627E\u4E0D\u5230\u65B9\u6CD5\uFF1A</p><p><img src="https://file.bbzy.online/blog/7lU7Ck_Qu7Vvj6ohhYzNo8Op-H5nYNh2YWx1GOfnCsw.png" alt="image"></p><p><strong>\u7ED3\u8BBA\uFF1A\u63A5\u53E3\u4E2D\u7684static\u65B9\u6CD5\u4E0D\u80FD\u88AB\u7EE7\u627F\uFF0C\u4E5F\u4E0D\u80FD\u88AB\u5B9E\u73B0\u7C7B\u8C03\u7528\uFF0C\u53EA\u80FD\u88AB\u81EA\u8EAB\u8C03\u7528</strong></p><h2 id="default\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#default\u65B9\u6CD5" aria-hidden="true">#</a> default\u65B9\u6CD5</h2><p>\u51C6\u5907\u4E00\u4E2A\u5B50\u63A5\u53E3\u7EE7\u627FDefalutTest\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SubTest</span> <span class="token keyword">extends</span> <span class="token class-name">DefalutTest</span><span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51C6\u5907\u4E00\u4E2A\u5B50\u63A5\u53E3\u7684\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubTestImp</span> <span class="token keyword">implements</span> <span class="token class-name">SubTest</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO Auto-generated method stub</span>
        <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A\u5B50\u63A5\u53E3\u5B9E\u73B0\u7C7B\u5BF9\u8C61\uFF0C\u5E76\u8C03\u7528\u5BF9\u8C61\u4E2D\u7684default\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SubTestImp</span> stl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubTestImp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stl<span class="token punctuation">.</span><span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C\uFF1A DefalutTest defalut \u65B9\u6CD5</p><p><strong>\u7ED3\u8BBA1\uFF1Adefault\u65B9\u6CD5\u53EF\u4EE5\u88AB\u5B50\u63A5\u53E3\u7EE7\u627F\u4EA6\u53EF\u88AB\u5176\u5B9E\u73B0\u7C7B\u6240\u8C03\u7528</strong></p><p>\u73B0\u5728\u6211\u4EEC\u5728\u5B50\u63A5\u53E3\u4E2D\u91CD\u5199default\u65B9\u6CD5\uFF0C\u5728\u8FDB\u884C\u8C03\u7528\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SubTest</span> <span class="token keyword">extends</span> <span class="token class-name">DefalutTest</span><span class="token punctuation">{</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;SubTest defalut \u65B9\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C\uFF1ASubTest defalut \u65B9\u6CD5</p><p><strong>\u7ED3\u8BBA2\uFF1Adefault\u65B9\u6CD5\u88AB\u7EE7\u627F\u65F6\uFF0C\u53EF\u4EE5\u88AB\u5B50\u63A5\u53E3\u8986\u5199</strong></p><p>\u73B0\u5728\uFF0C\u6211\u4EEC\u53BB\u9664\u63A5\u53E3\u95F4\u7684\u7EE7\u627F\u5173\u7CFB\uFF0C\u5E76\u4F7F\u5F97SubTestImp\u540C\u65F6\u5B9E\u73B0\u7236\u63A5\u53E3\u548C\u5B50\u63A5\u53E3\uFF0C\u6211\u4EEC\u77E5\u9053\u6B64\u65F6\u7236\u63A5\u53E3\u548C\u5B50\u63A5\u53E3\u4E2D\u5B58\u5728\u540C\u540D\u540C\u53C2\u6570\u7684default\u65B9\u6CD5\uFF0C\u8FD9\u4F1A\u600E\u4E48\u6837\uFF1F \u5982\u4E0B\u56FE\u6240\u793A\uFF0C\u5B9E\u73B0\u7C7B\u62A5\u9519\uFF0C\u5B9E\u73B0\u7C7B\u8981\u6C42\u5FC5\u987B\u6307\u5B9A\u4ED6\u8981\u5B9E\u73B0\u90A3\u4E2A\u63A5\u53E3\u4E2D\u7684default\u65B9\u6CD5</p><p><img src="https://file.bbzy.online/blog/Z2V7cxnFYmxTDuoe4_g8e41yEzq--KfwLF1enMUqNkQ.png" alt="image"></p><p><strong>\u7ED3\u8BBA3\uFF1A\u5982\u679C\u4E00\u4E2A\u7C7B\u5B9E\u73B0\u4E86\u591A\u4E2A\u63A5\u53E3\uFF0C\u4E14\u8FD9\u4E9B\u63A5\u53E3\u4E2D\u65E0\u7EE7\u627F\u5173\u7CFB\uFF0C\u8FD9\u4E9B\u63A5\u53E3\u4E2D\u82E5\u6709\u76F8\u540C\u7684\uFF08\u540C\u540D\uFF0C\u540C\u53C2\u6570\uFF09\u7684default\u65B9\u6CD5\uFF0C\u5219\u63A5\u53E3\u5B9E\u73B0\u7C7B\u4F1A\u62A5\u9519\uFF0C\u63A5\u53E3\u5B9E\u73B0\u7C7B\u5FC5\u987B\u901A\u8FC7\u7279\u6B8A\u8BED\u6CD5\u6307\u5B9A\u8BE5\u5B9E\u73B0\u7C7B\u8981\u5B9E\u73B0\u90A3\u4E2A\u63A5\u53E3\u7684default\u65B9\u6CD5</strong></p><p>\u7279\u6B8A\u8BED\u6CD5\uFF1A<code>&lt;\u63A5\u53E3&gt;.super.&lt;\u65B9\u6CD5\u540D&gt;([\u53C2\u6570])</code> \u793A\u4F8B\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubTestImp</span> <span class="token keyword">implements</span> <span class="token class-name">SubTest</span><span class="token punctuation">,</span><span class="token class-name">DefalutTest</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO Auto-generated method stub</span>
        <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO Auto-generated method stub</span>
        <span class="token class-name">DefalutTest</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u63A5\u53E3\u4EE3\u7801</span>
<span class="token keyword">interface</span> <span class="token class-name">Formula</span> <span class="token punctuation">{</span>
    <span class="token keyword">double</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span> <span class="token keyword">double</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5B9E\u73B0</span>
<span class="token class-name">Formula</span> formula <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Formula</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>a <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
formula<span class="token punctuation">.</span><span class="token function">calculate</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 100.0</span>
formula<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 4.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_2-lambda\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2-lambda\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> 2.Lambda\u8868\u8FBE\u5F0F</h1><p>\u7528\u6765\u66FF\u4EE3\u533F\u540D\u51FD\u6570\uFF0C\u53EF\u4EE5\u5C06\u4E00\u4E2A\u51FD\u6570\u8D4B\u503C\u7ED9\u4E00\u4E2A\u53D8\u91CF\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u53E6\u4E00\u4E2A\u51FD\u6570\uFF0CJava\u7684\u95ED\u5305\u539F\u5219\uFF1A\u53EF\u63A8\u5BFC\u5C31\u662F\u53EF\u7701\u7565\uFF0C\u6BD4\u5982\u8BF4\u53C2\u6570\u7C7B\u578B\uFF0C\u8FD4\u56DE\u503C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1. \u4E0D\u9700\u8981\u53C2\u6570,\u8FD4\u56DE\u503C\u4E3A 5  {}\u53EA\u6709\u4E00\u884C\u4EE3\u7801\uFF0C\u53EF\u4EE5\u7701\u7565</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token number">5</span>  
  
<span class="token comment">// 2. \u63A5\u6536\u4E00\u4E2A\u53C2\u6570(\u6570\u5B57\u7C7B\u578B),\u8FD4\u56DE\u51762\u500D\u7684\u503C\uFF0C()\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\u53EF\u4EE5\u7701\u7565 </span>
x <span class="token operator">-&gt;</span> <span class="token number">2</span> <span class="token operator">*</span> x  
  
<span class="token comment">// 3. \u63A5\u53D72\u4E2A\u53C2\u6570(\u6570\u5B57),\u5E76\u8FD4\u56DE\u4ED6\u4EEC\u7684\u5DEE\u503C  </span>
<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> x \u2013 y  
  
<span class="token comment">// 4. \u63A5\u65362\u4E2Aint\u578B\u6574\u6570,\u8FD4\u56DE\u4ED6\u4EEC\u7684\u548C  </span>
<span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> x <span class="token operator">+</span> y  
  
<span class="token comment">// 5. \u63A5\u53D7\u4E00\u4E2A string \u5BF9\u8C61,\u5E76\u5728\u63A7\u5236\u53F0\u6253\u5370,\u4E0D\u8FD4\u56DE\u4EFB\u4F55\u503C(\u770B\u8D77\u6765\u50CF\u662F\u8FD4\u56DEvoid)  </span>
<span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u8BED\u6CD5" aria-hidden="true">#</a> 1.\u8BED\u6CD5</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Interface</span> <span class="token keyword">var</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BE5\u63A5\u53E3\u53EA\u80FD\u6709\u4E00\u4E2A\u9700\u8981\u88AB\u5B9E\u73B0\u7684\u65B9\u6CD5\uFF0C\u5C0F\u62EC\u53F7\u4E2D\u53C2\u6570\u53D6\u51B3\u4E8EInterface \u7684\u63A5\u53E3\u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u6CA1\u6709\u53C2\u6570\u5219\u4E3A\u7A7A\uFF0C{}\u4E2D\u4E3A\u65B9\u6CD5\u7684\u5B9E\u73B0\u5185\u5BB9\uFF0C\u5982\u679C\u5185\u5BB9\u53EA\u6709\u4E00\u884C\u4EE3\u7801\uFF0C{}\u53EF\u4EE5\u7701\u7565\u3002\u5B9E\u9645\u4E0A\u5C31\u662F\u533F\u540D\u51FD\u6570</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token comment">//\u4EE5\u5F80\u7684\u5199\u6CD5</span>
        <span class="token class-name">Runnable</span> run <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5E38\u89C4\u5199\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        run<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//Lambda\u8868\u8FBE\u5F0F\uFF0C{}\u4E2D\u53EA\u6709\u4E00\u6761\u8BED\u53E5\u65F6\uFF0C{}\u53EF\u4EE5\u7701\u7565\u533F\u540D</span>
        <span class="token class-name">Runnable</span> runnable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Lambda\u8BED\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        runnable<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\u9700\u8981\u88AB\u5B9E\u73B0\u7684\u63A5\u53E3\uFF0C\u79F0\u4E3A\u201C<strong>\u51FD\u6570\u5F0F\u63A5\u53E3</strong>\u201D\uFF0C\u4E3A\u4E86\u907F\u514D\u540E\u7EED\u88AB\u4EBA\u5728\u8BE5\u63A5\u53E3\u4E2D\u6DFB\u52A0\u65B9\u6CD5\uFF0C\u5BFC\u81F4\u89C4\u5219\u88AB\u7834\u574F\uFF0C\u53EF\u4EE5\u5728\u8BE5\u63A5\u53E3\u4E0A\u52A0\u4E00\u4E2A\u58F0\u660E\xA0<strong>@FunctionalInterface\uFF08\u6807\u8BB0\u6CE8\u89E3\uFF09</strong>\uFF0C\u8FD9\u6837\u8BE5\u63A5\u53E3\u5C31\u65E0\u6CD5\u6DFB\u52A0\u65B0\u7684\u63A5\u53E3\u51FD\u6570\u4E86</p><h2 id="_2-\u53D8\u91CF\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#_2-\u53D8\u91CF\u4F5C\u7528\u57DF" aria-hidden="true">#</a> 2.\u53D8\u91CF\u4F5C\u7528\u57DF</h2><p>lambda \u8868\u8FBE\u5F0F<strong>\u53EA\u80FD\u5F15\u7528final \u7C7B\u578B\u7684\u5916\u5C42\u5C40\u90E8\u53D8\u91CF</strong>\uFF0C\u5C31\u662F\u8BF4<strong>\u4E0D\u80FD\u5728 lambda \u5185\u90E8\u4FEE\u6539\u5B9A\u4E49\u5728\u57DF\u5916\u7684\u5C40\u90E8\u53D8\u91CF</strong>\uFF0C\u5426\u5219\u4F1A\u7F16\u8BD1\u9519\u8BEF\u3002\u4E0E\u533F\u540D\u51FD\u6570\u540C\u7406</p><p><img src="https://file.bbzy.online/blog/3c2SQ73u2PNUwAIzpZNAsGhX11U8bvuZC89Tse7BmPM.png" alt="image"></p><p><strong>\u26A0\uFE0F\uFF1A\u5728 Lambda \u8868\u8FBE\u5F0F\u5F53\u4E2D\u4E0D\u5141\u8BB8\u58F0\u660E\u4E00\u4E2A\u4E0E\u5C40\u90E8\u53D8\u91CF\u540C\u540D\u7684\u53C2\u6570\u6216\u8005\u5C40\u90E8\u53D8\u91CF\u3002</strong></p><p><img src="https://file.bbzy.online/blog/hn27h90lEyvGUMiRejgDogelRZhs4C_pvU6Z4k8NMak.png" alt="image"></p><h2 id="_3-\u65B9\u6CD5\u7684\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#_3-\u65B9\u6CD5\u7684\u5F15\u7528" aria-hidden="true">#</a> 3.\u65B9\u6CD5\u7684\u5F15\u7528</h2><p>\u82E5Lambda\u4F53\u4E2D\u7684\u5185\u5BB9\u6709\u65B9\u6CD5\u5DF2\u7ECF\u5B9E\u73B0\u4E86\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u201C\u65B9\u6CD5\u5F15\u7528\u201D\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A\u65B9\u6CD5\u5F15\u7528\u662Flambda\u8868\u8FBE\u5F0F\u7684\u53E6\u5916\u4E00\u79CD\u8868\u8FBE\u5F62\u5F0F \u4E3B\u8981\u6709\u4E09\u79CD\u8BED\u6CD5\u683C\u5F0F\uFF1A</p><ul><li>\u5BF9\u8C61::\u5B9E\u4F8B\u65B9\u6CD5\u540D</li><li>\u7C7B::\u9759\u6001\u65B9\u6CD5\u540D</li><li>\u7C7B::\u5B9E\u4F8B\u65B9\u6CD5\u540D \u88AB\u5F15\u7528\u7684\u65B9\u6CD5\u7684\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u5FC5\u987B\u548C\u8981\u5B9E\u73B0\u7684\u62BD\u8C61\u65B9\u6CD5\u7684\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u4E00\u81F4</li></ul><h3 id="\u9759\u6001\u65B9\u6CD5\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5\u5F15\u7528" aria-hidden="true">#</a> \u9759\u6001\u65B9\u6CD5\u5F15\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u683C\u5F0F\uFF1AClassname :: staticMethodName  \u548C\u9759\u6001\u65B9\u6CD5\u8C03\u7528\u76F8\u6BD4\uFF0C\u53EA\u662F\u628A . \u6362\u4E3A ::</span>
<span class="token class-name">String</span><span class="token operator">::</span><span class="token function">valueOf</span>   \u7B49\u4EF7\u4E8Elambda\u8868\u8FBE\u5F0F <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token class-name">Math</span><span class="token operator">::</span><span class="token function">pow</span>       \u7B49\u4EF7\u4E8Elambda\u8868\u8FBE\u5F0F  <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u4F8B\u5BF9\u8C61\u65B9\u6CD5\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u5BF9\u8C61\u65B9\u6CD5\u5F15\u7528" aria-hidden="true">#</a> \u5B9E\u4F8B\u5BF9\u8C61\u65B9\u6CD5\u5F15\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u683C\u5F0F\uFF1AinstanceReference::methodName</span>
<span class="token keyword">class</span> <span class="token class-name">ComparisonProvider</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareByName</span><span class="token punctuation">(</span><span class="token class-name">Person</span> a<span class="token punctuation">,</span> <span class="token class-name">Person</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareByAge</span><span class="token punctuation">(</span><span class="token class-name">Person</span> a<span class="token punctuation">,</span> <span class="token class-name">Person</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">getBirthday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">getBirthday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token class-name">ComparisonProvider</span> myComparisonProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComparisonProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>rosterAsArray<span class="token punctuation">,</span> myComparisonProvider<span class="token operator">::</span><span class="token function">compareByName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8D85\u7C7B\u4E0A\u7684\u5B9E\u4F8B\u65B9\u6CD5\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u8D85\u7C7B\u4E0A\u7684\u5B9E\u4F8B\u65B9\u6CD5\u5F15\u7528" aria-hidden="true">#</a> \u8D85\u7C7B\u4E0A\u7684\u5B9E\u4F8B\u65B9\u6CD5\u5F15\u7528</h3><p>\u683C\u5F0F\uFF1Asuper::methodName \u8FD8\u53EF\u4EE5\u4F7F\u7528this \u6CDB\u578B\u7C7B\u548C\u6CDB\u578B\u65B9\u6CD5\u5F15\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyFunc</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> als<span class="token punctuation">,</span> <span class="token class-name">T</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyArrayOps</span> <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">int</span> <span class="token function">countMatching</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> vals<span class="token punctuation">,</span> <span class="token class-name">T</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token keyword">if</span> <span class="token punctuation">(</span>vals<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> v<span class="token punctuation">)</span> count<span class="token operator">++</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">return</span> count<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericMethodRefDemo</span> <span class="token punctuation">{</span>    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">int</span> <span class="token function">myOp</span><span class="token punctuation">(</span><span class="token class-name">MyFunc</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> vals<span class="token punctuation">,</span> <span class="token class-name">T</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> f<span class="token punctuation">.</span><span class="token function">func</span><span class="token punctuation">(</span>vals<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> vals <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;One&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Two&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Three&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Two&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count<span class="token punctuation">;</span>
        count<span class="token operator">=</span><span class="token function">myOp</span><span class="token punctuation">(</span><span class="token class-name">MyArrayOps</span><span class="token operator">::</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span>countMatching<span class="token punctuation">,</span> vals<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;vals contains &quot;</span><span class="token operator">+</span>count<span class="token operator">+</span><span class="token string">&quot; 4s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        count<span class="token operator">=</span><span class="token function">myOp</span><span class="token punctuation">(</span><span class="token class-name">MyArrayOps</span><span class="token operator">::</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>countMatching<span class="token punctuation">,</span> strs<span class="token punctuation">,</span> <span class="token string">&quot;Two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;strs contains &quot;</span><span class="token operator">+</span>count<span class="token operator">+</span><span class="token string">&quot; Twos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6784\u9020\u5668\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u5668\u5F15\u7528" aria-hidden="true">#</a> \u6784\u9020\u5668\u5F15\u7528</h3><p>\u901A\u8FC7\u51FD\u6570\u5F0F\u63A5\u53E3\u5B9E\u4F8B\u5316\u7C7B\u65F6\u53EF\u4EE5\u7528\u6784\u9020\u5668\u5F15\u7528\uFF0C\u5F15\u7528\u5230\u7684\u662F\u65B9\u6CD5\u53C2\u6570\u4E2A\u6570\u548C\u7C7B\u578B\u5339\u914D\u7684\u6784\u9020\u5668</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u683C\u5F0F\uFF1AClassName :: new\uFF0C\u8C03\u7528\u9ED8\u8BA4\u6784\u9020\u5668\u3002</span>
<span class="token comment">//lambda\u65B9\u5F0F</span>
<span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Passenger</span><span class="token punctuation">&gt;</span></span> supplier1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Passenger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6784\u9020\u5668\u5F15\u7528:\u901A\u8FC7\u7C7B\u578B\u63A8\u65AD\uFF0C\u5F15\u7528\u65E0\u53C2\u6784\u9020\u5668</span>
<span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Passenger</span><span class="token punctuation">&gt;</span></span> supplier2 <span class="token operator">=</span> <span class="token class-name">Passenger</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">;</span>
<span class="token comment">//lambda\u65B9\u5F0F</span>
<span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Passenger</span><span class="token punctuation">&gt;</span></span> function1 <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Passenger</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6784\u9020\u5668\u5F15\u7528:\u901A\u8FC7\u7C7B\u578B\u63A8\u65AD\uFF0C\u5F15\u7528\u6709\u4E24\u4E2AString\u53C2\u6570\u7684\u6784\u9020\u5668</span>
<span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Passenger</span><span class="token punctuation">&gt;</span></span> function2 <span class="token operator">=</span> <span class="token class-name">Passenger</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5F15\u7528" aria-hidden="true">#</a> \u6570\u7EC4\u5F15\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//lambda\u65B9\u5F0F</span>
<span class="token class-name">Function</span><span class="token operator">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> fun1 <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs1 <span class="token operator">=</span> fun1<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u6570\u7EC4\u5F15\u7528</span>
<span class="token class-name">Function</span><span class="token operator">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> fun2 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">;</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs2 <span class="token operator">=</span> fun2<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-stream" tabindex="-1"><a class="header-anchor" href="#_3-stream" aria-hidden="true">#</a> 3.Stream</h1><p><strong>Stream\uFF08\u6D41\uFF09\u662F\u4E00\u4E2A\u6765\u81EA\u6570\u636E\u6E90\u7684\u5143\u7D20\u961F\u5217\u5E76\u652F\u6301\u805A\u5408\u64CD\u4F5C</strong></p><ul><li><p>\u5143\u7D20\u662F\u7279\u5B9A\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u5F62\u6210\u4E00\u4E2A\u961F\u5217\u3002 Java\u4E2D\u7684Stream\u5E76\u4E0D\u4F1A\u5B58\u50A8\u5143\u7D20\uFF0C\u800C\u662F\u6309\u9700\u8BA1\u7B97\u3002</p></li><li><p>\u6570\u636E\u6E90 \u6D41\u7684\u6765\u6E90\u3002 \u53EF\u4EE5\u662F\u96C6\u5408\uFF0C\u6570\u7EC4\uFF0CI/O channel\uFF0C \u4EA7\u751F\u5668generator \u7B49\u3002</p></li><li><p>\u805A\u5408\u64CD\u4F5C \u7C7B\u4F3CSQL\u8BED\u53E5\u4E00\u6837\u7684\u64CD\u4F5C\uFF0C \u6BD4\u5982filter, map, reduce, find, match, sorted\u7B49\u3002</p></li></ul><h2 id="\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027" aria-hidden="true">#</a> <strong>\u7279\u6027\uFF1A</strong></h2><ul><li><p>\u4E0D\u5B58\u50A8\u6570\u636E</p></li><li><p>\u4E0D\u6539\u53D8\u6E90\u6570\u636E</p></li><li><p>\u5EF6\u8FDF\u6267\u884C</p></li></ul><h2 id="\u4F7F\u7528\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6B65\u9AA4" aria-hidden="true">#</a> <strong>\u4F7F\u7528\u6B65\u9AA4\uFF1A</strong></h2><ul><li><p>\u521B\u5EFAStream\u6570\u636E\u6E90\uFF1B</p></li><li><p>\u6570\u636E\u5904\u7406\uFF0C\u8F6C\u6362Stream\uFF0C\u6BCF\u6B21\u8F6C\u6362\u539F\u6709Stream\u5BF9\u8C61\u4E0D\u6539\u53D8\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684Stream\u5BF9\u8C61\uFF08\u53EF\u4EE5\u6709\u591A\u6B21\u8F6C\u6362\uFF09\uFF1B</p></li><li><p>\u5BF9Stream\u8FDB\u884C\u805A\u5408\uFF08Reduce\uFF09\u64CD\u4F5C\uFF0C\u83B7\u53D6\u60F3\u8981\u7684\u7ED3\u679C\uFF1B</p></li></ul><h2 id="\u521B\u5EFA\u6570\u636E\u6E90-stream" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u6570\u636E\u6E90-stream" aria-hidden="true">#</a> <strong>\u521B\u5EFA\u6570\u636E\u6E90(<strong>stream</strong>)</strong></h2><ol><li>Collection.stream(); \u4ECE\u96C6\u5408\u83B7\u53D6\u6D41\u3002</li><li>Collection.parallelStream();\u4ECE\u96C6\u5408\u83B7\u53D6\u5E76\u884C\u6D41\u3002</li><li>Arrays.stream(T array) or Stream.of(); \u4ECE\u6570\u7EC4\u83B7\u53D6\u6D41\u3002</li><li>BufferedReader.lines(); \u4ECE\u8F93\u5165\u6D41\u4E2D\u83B7\u53D6\u6D41\u3002</li><li>IntStream.of() ; \u4ECE\u9759\u6001\u65B9\u6CD5\u4E2D\u83B7\u53D6\u6D41\u3002</li><li>Stream.generate(); \u81EA\u5DF1\u751F\u6210\u6D41</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">FileNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> nameList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;Darcy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Chris&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Linda&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Kim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Poul&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Peter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nameArr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Darcy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Chris&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Linda&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Kim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Poul&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Peter&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u96C6\u5408\u83B7\u53D6 Stream \u6D41</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> nameListStream <span class="token operator">=</span> nameList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u96C6\u5408\u83B7\u53D6\u5E76\u884C Stream \u6D41</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> nameListStream2 <span class="token operator">=</span> nameList<span class="token punctuation">.</span><span class="token function">parallelStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6570\u7EC4\u83B7\u53D6 Stream \u6D41</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> nameArrStream <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>nameArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6570\u7EC4\u83B7\u53D6 Stream \u6D41</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> nameArrStream1 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>nameArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6587\u4EF6\u6D41\u83B7\u53D6 Stream \u6D41</span>
    <span class="token class-name">BufferedReader</span> bufferedReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">&quot;README.md&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> linesStream <span class="token operator">=</span> bufferedReader<span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4ECE\u9759\u6001\u65B9\u6CD5\u83B7\u53D6\u6D41\u64CD\u4F5C</span>
    <span class="token class-name">IntStream</span> rangeStream <span class="token operator">=</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rangeStream<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>num <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>num<span class="token operator">+</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntStream</span> intStream <span class="token operator">=</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    intStream<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>num <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>num<span class="token operator">+</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u636E\u5904\u7406-\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u5904\u7406-\u8F6C\u6362" aria-hidden="true">#</a> \u6570\u636E\u5904\u7406/\u8F6C\u6362</h2><p>\u4E2D\u95F4\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u6709\u591A\u4E2A\uFF0C\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684stream\u5BF9\u8C61\uFF0C\u60F0\u6027\u8BA1\u7B97\uFF0C\u53EA\u6709\u5728\u5F00\u59CB\u6536\u96C6\u7ED3\u679C\u65F6\u4E2D\u95F4\u64CD\u4F5C\u624D\u4F1A\u751F\u6548\u3002 map (mapToInt, flatMap )\uFF1A\u628A\u5BF9\u8C61\u6620\u5C04\u6210\u53E6\u4E00\u79CD\u5BF9\u8C61</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mapTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numberList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6620\u5C04\u6210 2\u500D\u6570\u5B57</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> numberList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>number <span class="token operator">-&gt;</span> number <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    collect<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>number <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    numberList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>number <span class="token operator">-&gt;</span> <span class="token string">&quot;\u6570\u5B57 &quot;</span> <span class="token operator">+</span> number <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>number <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">flatMapTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> inputStream <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> inputStream
            <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>childList<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> childList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    collect<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>number <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment">// 1,2,3,4,5,6,</span>
filter\uFF1A\u6570\u636E\u7B5B\u9009\uFF0C\u76F8\u5F53\u4E8E<span class="token keyword">if</span>\u5224\u65AD
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">filterTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numberList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> numberList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>number <span class="token operator">-&gt;</span> number <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    collect<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>number <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
distinct\uFF1A\u53BB\u91CD
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">distinctTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;AA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CC&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CC&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;AA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;AA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> l <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;count:&quot;</span><span class="token operator">+</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> output <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
sorted
peek
limit\uFF1A\u83B7\u53D6\u524Dn\u4E2A\u5143\u7D20
skip\uFF1A\u4E22\u5F03\u524Dn\u4E2A\u5143\u7D20
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">limitOrSkipTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ageList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ageList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>age <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>age<span class="token operator">+</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\u3001<span class="token comment">//11\uFF0C22,13</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ageList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>age <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>age<span class="token operator">+</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//14,25,26</span>
<span class="token punctuation">}</span>
parallel\uFF1A\u5E76\u884C\u6D41
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parallelTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Long</span> resourse <span class="token operator">=</span> <span class="token class-name">LongStream</span><span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1000000000L</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token class-name">Long</span><span class="token operator">::</span><span class="token function">sum</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resourse<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
sequential
unordered
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u805A\u5408\u6536\u96C6\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u805A\u5408\u6536\u96C6\u7ED3\u679C" aria-hidden="true">#</a> \u805A\u5408\u6536\u96C6\u7ED3\u679C</h2><p>stream\u5904\u7406\u7684\u6700\u540E\u4E00\u6B65\uFF0C\u6267\u884C\u5B8Cstream\u5C31\u88AB\u7528\u5C3D\u4E86\u4E0D\u80FD\u7EE7\u7EED\u64CD\u4F5C\u3002 forEach\uFF1A\u904D\u5386stream\uFF0C\u4E0D\u80FDreturn/break\uFF0C\u652F\u6301lambda</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numberList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
numberList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>number <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number<span class="token operator">+</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
forEachOrdered
toArray
reduce\uFF1A\u7D2F\u52A0\u5668
<span class="token comment">//reduce\u4E2D\u8FD4\u56DE\u7684\u7ED3\u679C\u4F1A\u4F5C\u4E3A\u4E0B\u6B21\u7D2F\u52A0\u5668\u8BA1\u7B97\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570</span>
<span class="token class-name">Optional</span> accResult <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;acc : &quot;</span> <span class="token operator">+</span> acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    acc <span class="token operator">+=</span> item<span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;item: &quot;</span> <span class="token operator">+</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;acc+ : &quot;</span> <span class="token operator">+</span> acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> acc<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
collect
min
max
count
anyMatch
allMatch
noneMatch
findFirst
findAny
iterator
<span class="token class-name">Statistics</span>\uFF1A\u7EDF\u8BA1
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mathTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntSummaryStatistics</span> stats <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">summaryStatistics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u5C0F\u503C\uFF1A&quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getMin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u5927\u503C\uFF1A&quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getMax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E2A\u6570\uFF1A&quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u548C\uFF1A&quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5E73\u5747\u6570\uFF1A&quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getAverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment">// \u6700\u5C0F\u503C\uFF1A1</span>
<span class="token comment">// \u6700\u5927\u503C\uFF1A6</span>
<span class="token comment">// \u4E2A\u6570\uFF1A6</span>
<span class="token comment">// \u548C\uFF1A21</span>
<span class="token comment">// \u5E73\u5747\u6570\uFF1A3.5</span>
groupingBy\uFF1A\u5206\u7EC4\u805A\u5408\uFF0C\u76F8\u5F53\u4E8Emysql\u7684group  by
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">groupByTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ageList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> ageGrouyByMap <span class="token operator">=</span> ageList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">groupingBy</span><span class="token punctuation">(</span>age <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>age <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ageGrouyByMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5E74\u9F84&quot;</span> <span class="token operator">+</span> k <span class="token operator">+</span> <span class="token string">&quot;0\u591A\u5C81\u7684\u6709\uFF1A&quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment">// \u5E74\u9F8410\u591A\u5C81\u7684\u6709\uFF1A[11, 13, 14]</span>
<span class="token comment">// \u5E74\u9F8420\u591A\u5C81\u7684\u6709\uFF1A[22, 25, 26]</span>
partitioningBy\uFF1A\u6309\u6761\u4EF6\u5206\u7EC4
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">partitioningByTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ageList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> ageMap <span class="token operator">=</span> ageList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">partitioningBy</span><span class="token punctuation">(</span>age <span class="token operator">-&gt;</span> age <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u672A\u6210\u5E74\u4EBA\uFF1A&quot;</span> <span class="token operator">+</span> ageMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u5E74\u4EBA\uFF1A&quot;</span> <span class="token operator">+</span> ageMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment">// \u672A\u6210\u5E74\u4EBA\uFF1A[11, 13, 14]</span>
<span class="token comment">// \u6210\u5E74\u4EBA\uFF1A[22, 25, 26]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u81EA\u5DF1\u751F\u6210stream" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5DF1\u751F\u6210stream" aria-hidden="true">#</a> \u81EA\u5DF1\u751F\u6210Stream</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">generateTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u751F\u6210\u81EA\u5DF1\u7684\u968F\u673A\u6570\u6D41</span>
    <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> generateRandom <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span>random<span class="token operator">::</span><span class="token function">nextInt</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    generateRandom<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u751F\u6210\u81EA\u5DF1\u7684 UUID \u6D41</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span>UUID<span class="token punctuation">&gt;</span></span> generate <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token constant">UUID</span><span class="token operator">::</span><span class="token function">randomUUID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    generate<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u4F7F\u7528limit\u8FDB\u884C\u77ED\u8DEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="short-circuiting" tabindex="-1"><a class="header-anchor" href="#short-circuiting" aria-hidden="true">#</a> short-circuiting</h2><p>\u6709\u4E00\u79CD Stream \u64CD\u4F5C\u88AB\u79F0\u4F5C short-circuiting \uFF0C\u5B83\u662F\u6307\u5F53 Stream \u6D41\u65E0\u9650\u5927\u4F46\u662F\u9700\u8981\u8FD4\u56DE\u7684 Stream \u6D41\u662F\u6709\u9650\u7684\u65F6\u5019\uFF0C\u800C\u53C8\u5E0C\u671B\u5B83\u80FD\u5728\u6709\u9650\u7684\u65F6\u95F4\u5185\u8BA1\u7B97\u51FA\u7ED3\u679C\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u64CD\u4F5C\u5C31\u88AB\u79F0\u4E3Ashort-circuiting\u3002\u4F8B\u5982\u3000findFirst\u64CD\u4F5C\u3002</p><p><strong>findFirst\uFF1A\u627E\u51FAstream\u4E2D\u7B2C\u4E00\u4E2A\u5143\u7D20</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findFirstTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numberList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> firstNumber <span class="token operator">=</span> numberList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>firstNumber<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u627E\u51FA\u7B2C\u4E00\u4E2A\u5143\u7D20\u540E\u5C31\u4F1A\u505C\u6B62\u904D\u5386\uFF0C\u76F8\u5F53\u4E8E\u77ED\u8DEF\u64CD\u4F5C</span>
\u89E3\u51B3\u7EC8\u7AEF\u64CD\u4F5C\u53EA\u80FD\u4E00\u4E2A\u7684\u95EE\u9898
<span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Stream</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> streamSupplier <span class="token operator">=</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;d2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
streamSupplier<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anyMatch</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// ok</span>
streamSupplier<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">noneMatch</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5E76\u884C\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u5E76\u884C\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u5E76\u884C\u8FED\u4EE3\u5668</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//tryAdvance \u76F8\u5F53\u4E8E\u666E\u901A\u8FED\u4EE3\u5668iterator  \u4E32\u884C\u5904\u7406</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">AtomicInteger</span> num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> spliterator<span class="token punctuation">.</span><span class="token function">tryAdvance</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            num<span class="token punctuation">.</span><span class="token function">addAndGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//trySplit\u5C06list\u5206\u6BB5\uFF0C\u6BCF\u6BB5\u5355\u72EC\u5904\u7406\uFF0C\u4E3A\u5E76\u884C\u63D0\u4F9B\u53EF\u80FD</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">spliterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">AtomicInteger</span> num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Spliterator</span> s1 <span class="token operator">=</span> spliterator<span class="token punctuation">.</span><span class="token function">trySplit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Spliterator</span> s2 <span class="token operator">=</span> spliterator<span class="token punctuation">.</span><span class="token function">trySplit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    spliterator<span class="token punctuation">.</span><span class="token function">forEachRemaining</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        num<span class="token punctuation">.</span><span class="token function">addAndGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;spliterator:&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    s1<span class="token punctuation">.</span><span class="token function">forEachRemaining</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        num<span class="token punctuation">.</span><span class="token function">addAndGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;s1:&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    s2<span class="token punctuation">.</span><span class="token function">forEachRemaining</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        num<span class="token punctuation">.</span><span class="token function">addAndGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;s2:&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u7EC8\u7ED3\u679C\uFF1A&quot;</span><span class="token operator">+</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5229\u7528\u5206\u6BB5\uFF0C\u5F00\u542F\u591A\u7EBF\u7A0B\u5904\u7406</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">spliterator2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future1 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">run</span><span class="token punctuation">(</span>spliterator<span class="token punctuation">.</span><span class="token function">trySplit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;future1 finished!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future2 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">run</span><span class="token punctuation">(</span>spliterator<span class="token punctuation">.</span><span class="token function">trySplit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;future2 finished!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future3 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">run</span><span class="token punctuation">(</span>spliterator<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;future3 finished!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> combindFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">allOf</span><span class="token punctuation">(</span>future1<span class="token punctuation">,</span> future2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        combindFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;future1: &quot;</span> <span class="token operator">+</span> future1<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; future2: &quot;</span> <span class="token operator">+</span> future2<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u7EC8\u7ED3\u679C\u4E3A\uFF1A&quot;</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Spliterator</span> s1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">String</span> threadName <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7EBF\u7A0B&quot;</span> <span class="token operator">+</span> threadName <span class="token operator">+</span> <span class="token string">&quot;\u5F00\u59CB\u8FD0\u884C-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    s1<span class="token punctuation">.</span><span class="token function">forEachRemaining</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            count<span class="token punctuation">.</span><span class="token function">addAndGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7EBF\u7A0B&quot;</span> <span class="token operator">+</span> threadName <span class="token operator">+</span> <span class="token string">&quot;\u8FD0\u884C\u7ED3\u675F-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_4-\u51FD\u6570\u5F0F\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_4-\u51FD\u6570\u5F0F\u63A5\u53E3" aria-hidden="true">#</a> 4.\u51FD\u6570\u5F0F\u63A5\u53E3</h1><p>\u5982\u679C\u4E00\u4E2A\u63A5\u53E3\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\uFF0C\u5219\u8BE5\u63A5\u53E3\u79F0\u4E4B\u4E3A\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u56E0\u4E3A \u9ED8\u8BA4\u65B9\u6CD5 \u4E0D\u7B97\u62BD\u8C61\u65B9\u6CD5\uFF0C\u6240\u4EE5\u4F60\u4E5F\u53EF\u4EE5\u7ED9\u4F60\u7684\u51FD\u6570\u5F0F\u63A5\u53E3\u6DFB\u52A0\u9ED8\u8BA4\u65B9\u6CD5\u3002</p><p>\u51FD\u6570\u5F0F\u63A5\u53E3\u53EF\u4EE5\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F\uFF0Clambda\u8868\u8FBE\u5F0F\u4F1A\u88AB\u5339\u914D\u5230\u8FD9\u4E2A\u62BD\u8C61\u65B9\u6CD5\u4E0A</p><p>\u6211\u4EEC\u53EF\u4EE5\u5C06lambda\u8868\u8FBE\u5F0F\u5F53\u4F5C\u4EFB\u610F\u53EA\u5305\u542B\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\u7684\u63A5\u53E3\u7C7B\u578B\uFF0C\u786E\u4FDD\u4F60\u7684\u63A5\u53E3\u4E00\u5B9A\u8FBE\u5230\u8FD9\u4E2A\u8981\u6C42\uFF0C\u4F60\u53EA\u9700\u8981\u7ED9\u4F60\u7684\u63A5\u53E3\u6DFB\u52A0 <strong>@FunctionalInterface</strong> \u6CE8\u89E3\uFF0C\u7F16\u8BD1\u5668\u5982\u679C\u53D1\u73B0\u4F60\u6807\u6CE8\u4E86\u8FD9\u4E2A\u6CE8\u89E3\u7684\u63A5\u53E3\u6709\u591A\u4E8E\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\u7684\u65F6\u5019\u4F1A\u62A5\u9519\u7684</p><p><strong>\u793A\u4F8B\u4EE3\u7801\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">interface</span> <span class="token class-name">Converter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">F</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">T</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">F</span> from<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Converter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> converter <span class="token operator">=</span> <span class="token punctuation">(</span>from<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Integer</span> converted <span class="token operator">=</span> converter<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>converted<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><p>\u5728\u63A5\u53E3\u4E2D\u65B0\u589E\u4E86<strong>default</strong>\u65B9\u6CD5\u548C<strong>static</strong>\u65B9\u6CD5\uFF0C\u8FD9\u4E24\u79CD\u65B9\u6CD5\u53EF\u4EE5\u6709\u65B9\u6CD5\u4F53</p><h2 id="static\u65B9\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#static\u65B9\u6CD5-1" aria-hidden="true">#</a> static\u65B9\u6CD5</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DefalutTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> a <span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DefalutTest defalut \u65B9\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">staticMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DefalutTest static \u65B9\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u53E3\u91CC\u7684\u9759\u6001\u65B9\u6CD5\uFF0C\u5373static\u4FEE\u9970\u7684\u6709\u65B9\u6CD5\u4F53\u7684\u65B9\u6CD5\u4E0D\u4F1A\u88AB\u7EE7\u627F\u6216\u8005\u5B9E\u73B0\uFF0C\u4F46\u662F\u9759\u6001\u53D8\u91CF\u4F1A\u88AB\u7EE7\u627F \u4F8B\u5982\uFF1A\u6211\u4EEC\u6DFB\u52A0\u4E00\u4E2A\u63A5\u53E3DefalutTest\u7684\u5B9E\u73B0\u7C7BDefaultTestImpl</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultTestImpl</span> <span class="token keyword">implements</span> <span class="token class-name">DefalutTest</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO Auto-generated method stub</span>
        <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0B\u56FE\u6240\u793A\u662F\u8FD9\u4E2A\u5B9E\u73B0\u7C7B\u4E2D\u6240\u6709\u53EF\u8C03\u7528\u7684\u65B9\u6CD5\uFF1A</p><p><img src="https://file.bbzy.online/blog/7l6qRqbBkyaG589apNx8zRdRNHPLnseNar7tXwZ1k7Y.png" alt="image"></p><p>\u5728\u8FD9\u4E9B\u65B9\u6CD5\u91CC\u9762\u6211\u4EEC\u65E0\u6CD5\u627E\u5230staticMethod\u65B9\u6CD5\uFF0C\u5219\u8BF4\u660E\u63A5\u53E3\u4E2D\u7684static\u65B9\u6CD5\u4E0D\u80FD\u88AB\u5B83\u7684\u5B9E\u73B0\u7C7B\u76F4\u63A5\u4F7F\u7528\u3002\u4F46\u662F\u6211\u4EEC\u770B\u5230\u4E86defaultMethod\uFF0C\u8BF4\u660E\u5B9E\u73B0\u7C7B\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\u63A5\u53E3\u4E2D\u7684default\u65B9\u6CD5\uFF1B \u90A3\u4E48\u5982\u4F55\u4F7F\u7528\u63A5\u53E3\u4E2D\u7684static\u65B9\u6CD5\u5462\uFF1F\uFF1F\uFF1F</p><p>\u63A5\u53E3.static\u65B9\u6CD5\u8C03\u7528\uFF0C\u5982\uFF1ADefalutTest.staticMethod();</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DefaultTestImpl</span> dtl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTestImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DefalutTest</span><span class="token punctuation">.</span><span class="token function">staticMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u8BD5\u56FE\u4F7F\u7528\u63A5\u53E3\u7684\u5B50\u63A5\u53E3\u53BB\u8C03\u7528\u7236\u63A5\u53E3\u7684static\u65B9\u6CD5\u662F\uFF0C\u6211\u4EEC\u53D1\u73B0\uFF0C\u65E0\u6CD5\u8C03\u7528\uFF0C\u627E\u4E0D\u5230\u65B9\u6CD5\uFF1A</p><p><img src="https://file.bbzy.online/blog/7lU7Ck_Qu7Vvj6ohhYzNo8Op-H5nYNh2YWx1GOfnCsw.png" alt="image"></p><p><strong>\u7ED3\u8BBA\uFF1A\u63A5\u53E3\u4E2D\u7684static\u65B9\u6CD5\u4E0D\u80FD\u88AB\u7EE7\u627F\uFF0C\u4E5F\u4E0D\u80FD\u88AB\u5B9E\u73B0\u7C7B\u8C03\u7528\uFF0C\u53EA\u80FD\u88AB\u81EA\u8EAB\u8C03\u7528</strong></p><h2 id="default\u65B9\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#default\u65B9\u6CD5-1" aria-hidden="true">#</a> default\u65B9\u6CD5</h2><p>\u51C6\u5907\u4E00\u4E2A\u5B50\u63A5\u53E3\u7EE7\u627FDefalutTest\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SubTest</span> <span class="token keyword">extends</span> <span class="token class-name">DefalutTest</span><span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51C6\u5907\u4E00\u4E2A\u5B50\u63A5\u53E3\u7684\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubTestImp</span> <span class="token keyword">implements</span> <span class="token class-name">SubTest</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO Auto-generated method stub</span>
        <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A\u5B50\u63A5\u53E3\u5B9E\u73B0\u7C7B\u5BF9\u8C61\uFF0C\u5E76\u8C03\u7528\u5BF9\u8C61\u4E2D\u7684default\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SubTestImp</span> stl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubTestImp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stl<span class="token punctuation">.</span><span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C\uFF1A DefalutTest defalut \u65B9\u6CD5</p><p><strong>\u7ED3\u8BBA1\uFF1Adefault\u65B9\u6CD5\u53EF\u4EE5\u88AB\u5B50\u63A5\u53E3\u7EE7\u627F\u4EA6\u53EF\u88AB\u5176\u5B9E\u73B0\u7C7B\u6240\u8C03\u7528</strong></p><p>\u73B0\u5728\u6211\u4EEC\u5728\u5B50\u63A5\u53E3\u4E2D\u91CD\u5199default\u65B9\u6CD5\uFF0C\u5728\u8FDB\u884C\u8C03\u7528\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SubTest</span> <span class="token keyword">extends</span> <span class="token class-name">DefalutTest</span><span class="token punctuation">{</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;SubTest defalut \u65B9\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C\uFF1ASubTest defalut \u65B9\u6CD5</p><p><strong>\u7ED3\u8BBA2\uFF1Adefault\u65B9\u6CD5\u88AB\u7EE7\u627F\u65F6\uFF0C\u53EF\u4EE5\u88AB\u5B50\u63A5\u53E3\u8986\u5199</strong></p><p>\u73B0\u5728\uFF0C\u6211\u4EEC\u53BB\u9664\u63A5\u53E3\u95F4\u7684\u7EE7\u627F\u5173\u7CFB\uFF0C\u5E76\u4F7F\u5F97SubTestImp\u540C\u65F6\u5B9E\u73B0\u7236\u63A5\u53E3\u548C\u5B50\u63A5\u53E3\uFF0C\u6211\u4EEC\u77E5\u9053\u6B64\u65F6\u7236\u63A5\u53E3\u548C\u5B50\u63A5\u53E3\u4E2D\u5B58\u5728\u540C\u540D\u540C\u53C2\u6570\u7684default\u65B9\u6CD5\uFF0C\u8FD9\u4F1A\u600E\u4E48\u6837\uFF1F \u5982\u4E0B\u56FE\u6240\u793A\uFF0C\u5B9E\u73B0\u7C7B\u62A5\u9519\uFF0C\u5B9E\u73B0\u7C7B\u8981\u6C42\u5FC5\u987B\u6307\u5B9A\u4ED6\u8981\u5B9E\u73B0\u90A3\u4E2A\u63A5\u53E3\u4E2D\u7684default\u65B9\u6CD5</p><p><img src="https://file.bbzy.online/blog/Z2V7cxnFYmxTDuoe4_g8e41yEzq--KfwLF1enMUqNkQ.png" alt="image"></p><p><strong>\u7ED3\u8BBA3\uFF1A\u5982\u679C\u4E00\u4E2A\u7C7B\u5B9E\u73B0\u4E86\u591A\u4E2A\u63A5\u53E3\uFF0C\u4E14\u8FD9\u4E9B\u63A5\u53E3\u4E2D\u65E0\u7EE7\u627F\u5173\u7CFB\uFF0C\u8FD9\u4E9B\u63A5\u53E3\u4E2D\u82E5\u6709\u76F8\u540C\u7684\uFF08\u540C\u540D\uFF0C\u540C\u53C2\u6570\uFF09\u7684default\u65B9\u6CD5\uFF0C\u5219\u63A5\u53E3\u5B9E\u73B0\u7C7B\u4F1A\u62A5\u9519\uFF0C\u63A5\u53E3\u5B9E\u73B0\u7C7B\u5FC5\u987B\u901A\u8FC7\u7279\u6B8A\u8BED\u6CD5\u6307\u5B9A\u8BE5\u5B9E\u73B0\u7C7B\u8981\u5B9E\u73B0\u90A3\u4E2A\u63A5\u53E3\u7684default\u65B9\u6CD5</strong></p><p>\u7279\u6B8A\u8BED\u6CD5\uFF1A<code>&lt;\u63A5\u53E3&gt;.super.&lt;\u65B9\u6CD5\u540D&gt;([\u53C2\u6570])</code> \u793A\u4F8B\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubTestImp</span> <span class="token keyword">implements</span> <span class="token class-name">SubTest</span><span class="token punctuation">,</span><span class="token class-name">DefalutTest</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO Auto-generated method stub</span>
        <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO Auto-generated method stub</span>
        <span class="token class-name">DefalutTest</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">defaultMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u63A5\u53E3\u4EE3\u7801</span>
<span class="token keyword">interface</span> <span class="token class-name">Formula</span> <span class="token punctuation">{</span>
    <span class="token keyword">double</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span> <span class="token keyword">double</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5B9E\u73B0</span>
<span class="token class-name">Formula</span> formula <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Formula</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>a <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
formula<span class="token punctuation">.</span><span class="token function">calculate</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 100.0</span>
formula<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 4.0</span>




</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,128),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","JDK8\u65B0\u7279\u6027.html.vue"]]);export{k as default};
